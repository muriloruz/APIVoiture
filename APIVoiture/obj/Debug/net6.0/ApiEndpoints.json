[
  {
    "ContainingType": "APIVoiture.Controllers.AcessoController",
    "Method": "Get",
    "RelativePath": "Acesso",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Program\u002B\u003C\u003Ec",
    "Method": "\u003C\u003CMain\u003E$\u003Eb__0_5",
    "RelativePath": "debug/routes",
    "HttpMethod": "GET",
    "IsController": false,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Void",
        "MediaTypes": [],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.EnderecoController",
    "Method": "AdicionaEndereco",
    "RelativePath": "Endereco",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "enderecoDto",
        "Type": "APIVoiture.Data.DTOs.CreateEnderecoDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.EnderecoController",
    "Method": "RecuperaEndereco",
    "RelativePath": "Endereco",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[APIVoiture.Data.DTOs.ReadEnderecoDto, APIVoiture, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.EnderecoController",
    "Method": "RecuperaEnderecoPorId",
    "RelativePath": "Endereco/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.EnderecoController",
    "Method": "AtualizaEndereco",
    "RelativePath": "Endereco/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "cinemaDto",
        "Type": "APIVoiture.Data.DTOs.UpdateEnderecoDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.EnderecoController",
    "Method": "DeletaEndereco",
    "RelativePath": "Endereco/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.FavoritoController",
    "Method": "CriarFavorito",
    "RelativePath": "Favorito",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIVoiture.Data.DTOs.FavoritoDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.FavoritoController",
    "Method": "GetFavoritosUser",
    "RelativePath": "Favorito/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.FavoritoController",
    "Method": "DeletarFavoritos",
    "RelativePath": "Favorito/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.PaymentsController",
    "Method": "CreatePaymentIntent",
    "RelativePath": "Payments/create-payment-intent",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "APIVoiture.Controllers.PaymentIntentCreateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.PecaController",
    "Method": "CreatePeca",
    "RelativePath": "Peca",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nomePeca",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "preco",
        "Type": "System.Double",
        "IsRequired": false
      },
      {
        "Name": "descricao",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "imagem",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "qntd",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "fabricante",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "garantia",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "VendedorId",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "APIVoiture.Data.DTOs.ReadPecaDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.PecaController",
    "Method": "GetPecas",
    "RelativePath": "Peca",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[APIVoiture.Data.DTOs.ReadPecaDto, APIVoiture, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.PecaController",
    "Method": "UpdatePeca",
    "RelativePath": "Peca/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "NomePeca",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Descricao",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Garantia",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Fabricante",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Qntd",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "Preco",
        "Type": "System.Nullable\u00601[[System.Double, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "VendedorId",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Imagem",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.PecaController",
    "Method": "GetPeca",
    "RelativePath": "Peca/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "APIVoiture.Data.DTOs.ReadPecaDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.PecaController",
    "Method": "DeletePeca",
    "RelativePath": "Peca/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.PecaController",
    "Method": "GetPeca",
    "RelativePath": "Peca/{nome}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nome",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[APIVoiture.Data.DTOs.ReadPecaDto, APIVoiture, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.PecaController",
    "Method": "ApagarPeca",
    "RelativePath": "Peca/apagar/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "AdicionaUsuario",
    "RelativePath": "Usuario",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDTO",
        "Type": "APIVoiture.Data.DTOs.CreateUsuarioDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "updateUsuario",
    "RelativePath": "Usuario/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "userDto",
        "Type": "APIVoiture.Data.DTOs.UpdateUsuarioDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "updateUsuarioPatch",
    "RelativePath": "Usuario/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "patch",
        "Type": "Microsoft.AspNetCore.JsonPatch.Operations.Operation[]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "deleteUsuario",
    "RelativePath": "Usuario/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "GetAllUsers",
    "RelativePath": "Usuario/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[APIVoiture.Data.DTOs.ReadUsuarioDto, APIVoiture, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "GetUserRoles",
    "RelativePath": "Usuario/getRole/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "Login",
    "RelativePath": "Usuario/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIVoiture.Data.DTOs.AuthUsuarioDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "GetUsuarioEmMultiplo",
    "RelativePath": "Usuario/mult",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "skip",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "take",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[APIVoiture.Data.DTOs.ReadUsuarioDto, APIVoiture, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "ChangePassword",
    "RelativePath": "Usuario/password/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "APIVoiture.Data.DTOs.ChangePasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "GetSingleUser",
    "RelativePath": "Usuario/single/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "GetUser",
    "RelativePath": "Usuario/users/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.UsuarioController",
    "Method": "verificarEmail",
    "RelativePath": "Usuario/verEmail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIVoiture.Data.DTOs.DtoEmailCNPJ",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "AdicionaVendedor",
    "RelativePath": "Vendedor",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vendedorDto",
        "Type": "APIVoiture.Data.DTOs.CreateVendedorDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "RecuperaEnderecos",
    "RelativePath": "Vendedor",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[APIVoiture.Data.DTOs.ReadVendedorDto, APIVoiture, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "RecuperaVendedorPorId",
    "RelativePath": "Vendedor/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "AtualizaVendedor",
    "RelativePath": "Vendedor/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "vendedorDto",
        "Type": "APIVoiture.Data.DTOs.UpdateVendedorDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "updateUsuarioPatch",
    "RelativePath": "Vendedor/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "patch",
        "Type": "Microsoft.AspNetCore.JsonPatch.Operations.Operation[]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "DeletaVendedor",
    "RelativePath": "Vendedor/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "GetUserRoles",
    "RelativePath": "Vendedor/getRole/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "Login",
    "RelativePath": "Vendedor/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIVoiture.Data.DTOs.AuthVendedor",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "ChangePassword",
    "RelativePath": "Vendedor/password/{id}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "dto",
        "Type": "APIVoiture.Data.DTOs.ChangePasswordRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "verificarEmail",
    "RelativePath": "Vendedor/verEmail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "APIVoiture.Data.DTOs.DtoEmailCNPJ",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorController",
    "Method": "ProcurarEmail",
    "RelativePath": "Vendedor/verEmail/{email}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorClienteController",
    "Method": "GetVendedorClientes",
    "RelativePath": "VendedorCliente",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[APIVoiture.Data.DTOs.VendedorClienteDTO, APIVoiture, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorClienteController",
    "Method": "CreateVendedorCliente",
    "RelativePath": "VendedorCliente",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "vendedorClienteDTO",
        "Type": "APIVoiture.Data.DTOs.VendedorClienteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorClienteController",
    "Method": "DeleteVendedorCliente",
    "RelativePath": "VendedorCliente/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorClienteController",
    "Method": "GetById",
    "RelativePath": "VendedorCliente/{usuarioId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "usuarioId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "APIVoiture.Controllers.VendedorClienteController",
    "Method": "GetPeca",
    "RelativePath": "VendedorCliente/pecas/{nome}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nome",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Object, System.Private.CoreLib, Version=6.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]